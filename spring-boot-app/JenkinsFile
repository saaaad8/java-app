pipeline {
    agent {
        docker {
            image 'saaddocker419/maven-docker-agent:v1'  // Use your custom Docker image
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'  // Allows Docker in Docker
        }
    }

    environment {
        SONAR_URL = "http://localhost:9099" // Local SonarQube URL
        DOCKER_IMAGE = "saaddocker419/java-app:${BUILD_NUMBER}" // Docker Hub repository and image
    }

    stages {
        stage('Checkout') {
            steps {
                bat 'echo successful'
            }
        }

        stage('Build and Test') {
            steps {
                bat 'cd java-app\\spring-boot-app && mvn clean package'
            }
        }

        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    bat '''
                        cd java-app\\spring-boot-app 
                        mvn sonar:sonar -Dsonar.login=%SONAR_AUTH_TOKEN% -Dsonar.host.url=%SONAR_URL%
                    '''
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    bat '''
                        cd java-app\\spring-boot-app
                        docker build -t %DOCKER_IMAGE% .
                    '''
                    
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker-jenkins") {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "java-app"
                GIT_USER_NAME = "saaaad8"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    bat '''
                        git config user.email "your-email@example.com"
                        git config user.name "Your Name"
                        set BUILD_NUMBER=%BUILD_NUMBER%
                        
                        powershell -Command "(Get-Content java-app\\spring-boot-app-manifests\\deployment.yml) -replace 'replaceImageTag', '%BUILD_NUMBER%' | Set-Content java-app\\spring-boot-app-manifests\\deployment.yml"
                        
                        git add java-app\\spring-boot-app-manifests\\deployment.yml
                        git commit -m "Update deployment image to version %BUILD_NUMBER%"
                        git push https://%GITHUB_TOKEN%@github.com/%GIT_USER_NAME%/%GIT_REPO_NAME% HEAD:main
                    '''
                }
            }
        }
    }
}
