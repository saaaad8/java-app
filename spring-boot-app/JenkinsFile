pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mounts Docker socket for accessing the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        bat 'echo passed'
        // Uncomment the line below to enable Git checkout
        // bat 'git clone -b main https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        bat 'dir' // 'ls -ltr' is replaced with 'dir' for listing files on Windows
        // Navigate to the project directory and build the project to create a JAR file
        bat 'cd java-maven-sonar-argocd-helm-k8s\\spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://34.201.116.83:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          bat 'cd java-maven-sonar-argocd-helm-k8s\\spring-boot-app && mvn sonar:sonar -Dsonar.login=%SONAR_AUTH_TOKEN% -Dsonar.host.url=%SONAR_URL%'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "abhishekf5/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            // Use 'docker build' to build the Docker image in Windows syntax
            bat 'cd java-maven-sonar-argocd-helm-k8s\\spring-boot-app && docker build -t %DOCKER_IMAGE% .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
            GIT_USER_NAME = "iam-veeramalla"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                bat '''
                    git config user.email "abhishek.xyz@gmail.com"
                    git config user.name "Abhishek Veeramalla"
                    set BUILD_NUMBER=%BUILD_NUMBER%
                    powershell -Command "(Get-Content java-maven-sonar-argocd-helm-k8s\\spring-boot-app-manifests\\deployment.yml) -replace 'replaceImageTag', '%BUILD_NUMBER%' | Set-Content java-maven-sonar-argocd-helm-k8s\\spring-boot-app-manifests\\deployment.yml"
                    git add java-maven-sonar-argocd-helm-k8s\\spring-boot-app-manifests\\deployment.yml
                    git commit -m "Update deployment image to version %BUILD_NUMBER%"
                    git push https://%GITHUB_TOKEN%@github.com/%GIT_USER_NAME%/%GIT_REPO_NAME% HEAD:main
                '''
            }
        }
    }
  }
}
